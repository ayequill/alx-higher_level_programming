>>> div_matrix = __import__("2-matrix_divided").matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]    
>>> div_matrix(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> div_matrix(matrix, 3.5)
[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]
>>> div_matrix(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> div_matrix(matrix, "3")
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> div_matrix(3, 3)
Traceback (most recent call last):
 ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_matrix((2,3), 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_matrix([2,4], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_matrix([[1,2,3],[4,5]], 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
>>> div_matrix([[1,2,3],[4,5,"5"]], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_matrix([[1,2,3],6], 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_matrix([[1,2,3],[4,5,float('inf')]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, inf]]
>>> matrix_divided([])
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]